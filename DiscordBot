import discord
import asyncio
import requests
from discord.ext import tasks, commands

# Configuration
TOKEN = "MTM0NjU4NjMyMzYyNDAwMTU5Nw.GOjDX5.Wt4YJd_3FYSO2qIWPebFYfbZNi4Q_ASLcvWo9w"
GUILD_ID = '1071241642905972756'
CHANNEL_ID = '1179212790490218587'
YOUTUBE_CHANNEL_ID = "UCQa0xo_y0L1GuI7cunr4AEA"
YOUTUBE_CHANNEL_NOTIFICATION_ID = "1184217773786808411"
ROLE_ID = '1277604664698736742'
TWITCH_USERNAME = "Knuckleykong"
TWITCH_CLIENT_ID = "gp762nuuoqcoxypju8c569th9wz7q5"
TWITCH_ACCESS_TOKEN = "fxk1tj9bjxfr4zkqejcp5mpq7c1vke"
TWITCH_API_URL = "https://api.twitch.tv/helix/streams?user_login=" + TWITCH_USERNAME

YOUTUBE_API_KEY = "AIzaSyDW9uVZYHnObYqpS_eEZzU8Blm-5IgYegE"
YOUTUBE_API_URL = f"https://www.googleapis.com/youtube/v3/search?part=snippet&channelId={YOUTUBE_CHANNEL_ID}&order=date&maxResults=1&key={YOUTUBE_API_KEY}"

intents = discord.Intents.default()
client = commands.Bot(command_prefix="!", intents=intents)

last_status = False  # Track previous stream status
last_video_id = None  # Track the last posted video ID

def check_twitch_status():
    headers = {
        "Client-ID": TWITCH_CLIENT_ID,
        "Authorization": f"Bearer {TWITCH_ACCESS_TOKEN}"
    }
    response = requests.get(TWITCH_API_URL, headers=headers)
    if response.status_code == 200:
        data = response.json()
        return len(data.get("data", [])) > 0  # True if live, False if offline
    else:
        print(f"Failed to fetch Twitch API: {response.status_code}")
        return False

def check_youtube_video():
    global last_video_id
    response = requests.get(YOUTUBE_API_URL)
    if response.status_code == 200:
        data = response.json()
        latest_video = data['items'][0]
        video_id = latest_video['id']['videoId']
        video_title = latest_video['snippet']['title']
        video_url = f"https://www.youtube.com/watch?v={video_id}"

        if video_id != last_video_id:
            last_video_id = video_id
            return video_title, video_url
    else:
        print(f"Failed to fetch YouTube API: {response.status_code}")
        return None, None

@tasks.loop(seconds=15)
async def check_stream_status():
    global last_status
    is_live = check_twitch_status()
    if is_live and not last_status:
        guild = client.get_guild(int(GUILD_ID))
        channel = guild.get_channel(int(CHANNEL_ID))
        role = guild.get_role(int(ROLE_ID))
        if channel and role:
            await channel.send(f"{role.mention} Knuckleykong is now LIVE on Twitch! Check it out: https://www.twitch.tv/{TWITCH_USERNAME}")
        print("Sent live notification.")
    last_status = is_live

@tasks.loop(minutes=5)
async def check_youtube_video_upload():
    video_title, video_url = check_youtube_video()
    if video_title and video_url:
        guild = client.get_guild(int(GUILD_ID))
        channel = guild.get_channel(int(YOUTUBE_CHANNEL_NOTIFICATION_ID))  # The new channel for YouTube notifications
        role = guild.get_role(int(ROLE_ID))
        if channel and role:
            await channel.send(f"{role.mention} Latest Yeti Report: {video_title} - {video_url}")
            print(f"Sent YouTube video notification: {video_title}")

@client.event
async def on_ready():
    print(f'Logged in as {client.user}')
    check_stream_status.start()
    check_youtube_video_upload.start()

client.run(TOKEN)
